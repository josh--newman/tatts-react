// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Company renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Company
    description="Something"
    logoUrl="https://example.com/api/stuff.png"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="logo"
>
          <img
                    alt="logo"
                    src="https://example.com/api/stuff.png"
          />
</div>,
        <p>
          Something
</p>,
        <span
          className="arrow"
>
          &gt;
</span>,
      ],
      "className": "list-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="logo"
            src="https://example.com/api/stuff.png"
/>,
          "className": "logo",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "alt": "logo",
            "src": "https://example.com/api/stuff.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Something",
        },
        "ref": null,
        "rendered": "Something",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": ">",
          "className": "arrow",
        },
        "ref": null,
        "rendered": ">",
        "type": "span",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="logo"
>
            <img
                        alt="logo"
                        src="https://example.com/api/stuff.png"
            />
</div>,
          <p>
            Something
</p>,
          <span
            className="arrow"
>
            &gt;
</span>,
        ],
        "className": "list-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="logo"
              src="https://example.com/api/stuff.png"
/>,
            "className": "logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "src": "https://example.com/api/stuff.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Something",
          },
          "ref": null,
          "rendered": "Something",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": ">",
            "className": "arrow",
          },
          "ref": null,
          "rendered": ">",
          "type": "span",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
